{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Gun.js","webpack:///./src/Settings.js","webpack:///./src/Tank.js","webpack:///./src/utils/mapIndicator.js","webpack:///./src/Battlefield.js","webpack:///./src/views/BattlefieldView.js","webpack:///./src/utils/helpers.js","webpack:///./src/Controllers/BattlefieldController.js","webpack:///./src/server/Server.js","webpack:///./src/server/Connection.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Gun","damage","bullets","this","min","max","shoot","Math","random","round","Settings","gun","hp","Tank","settings","health","config","fire","bullet","INDICATORS","empty","tank","mount","Battlefield","width","height","createArea","addMountains","coordinates","row","Array","fill","mountCount","x","floor","y","item","mountains","id","tanks","isTankOnCoord","updateBattlefieldCoordinates","find","some","ready","destroyMount","undefined","isMountOnCoords","isPointOnArea","oldCoordinates","newCoordinates","indicator","filter","changeBulletCoordinates","bulletCounter","timer","setTimeout","isBulletAvailable","isBulletAvailableToMove","bulletUpdateCallback","direction","collisionBullet","kust","includes","removeBullet","getTankByCoords","doDamage","removeTank","gameOverCallback","callback","BattlefieldViews","document","querySelector","rootDiv","createElement","classList","add","rowDiv","section","createSection","appendChild","body","dataset","type","content","playerId","$id","getElementById","removeAttribute","remove","$tank","$bullet","throttle","time","isOpen","arguments","BattlefieldController","battlefield","onKeyDown","onFireButtonPress","initBattlefieldView","player","addPlayer","updatePlayer","updateTankPosition","eventListener","battlefieldView","init","update","e","code","control","UP","moveTop","DOWN","moveDown","LEFT","moveLeft","RIGHT","moveRight","addEventListener","addBulletUpdateCallback","updateBulletDirection","addGameCallback","console","log","alert","setTankPosition","updateConfig","FIRE","addBullet","Server","Promise","resolve","reject","ceil","Connection","serverConnect","requestFieldSize","tank1","tank2","connection","areaSize","whatIsThisSize","then","size","_size","positionY","positionX_1","positionX_2","controls1","controls2","battlefieldViews","setInterval","catch","error"],"mappings":"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","file":"js/app.068d032a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/tank-game/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export class Gun {\r\n\r\n    constructor (damage, bullets) {\r\n        this.damage = damage;\r\n        this.bullets = bullets;\r\n    }\r\n    get fire () {\r\n        const [ min, max ] = this.damage;\r\n        const shoot = Math.random() * (max - min) + min;\r\n        return Math.round(shoot); \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","export class Settings {\r\n        tank_1 = {\r\n            gun: {\r\n                random: [15, 45],\r\n                bullets: 5,            \r\n            },\r\n            hp: 120,\r\n        };\r\n        tank_2 = {\r\n            gun: {\r\n                random: [13, 38],\r\n                bullets: 6,            \r\n            },\r\n            hp: 130,\r\n        }\r\n    constructor () {\r\n    }\r\n}\r\n\r\n","import { Gun }  from \"./Gun\";\r\nimport { Settings } from \"./Settings\";\r\n\r\nexport class Tank {\r\n    constructor (name){\r\n        this.name = name;\r\n        this.settings = new Settings(name)\r\n        this.health = this.settings[this.name].hp;\r\n    }\r\n    get fire (){\r\n        const config = this.settings[this.name];\r\n        this.gun = new Gun(config.gun.random, config.gun.bullets);\r\n        return this.gun.fire;\r\n    }\r\n    get bullets () {\r\n        return this.settings[this.name].gun.bullets;\r\n    }\r\n    doDamage (bullet) {\r\n        return this.health = this.health - bullet.damage;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","export const INDICATORS = {\r\n    empty: ' ',\r\n    tank: 'T',\r\n    mount: 'M',\r\n    bullet: 'B',\r\n}   ","// coordinates = [\r\n//   ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],\r\n//   ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],\r\n//   ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],\r\n//   ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],\r\n//   ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],\r\n//   ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],\r\n//   ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],\r\n//   ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],\r\n//   ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],\r\n// ]; пример того, как выглядит поле координат\r\nimport { INDICATORS } from \"./utils/mapIndicator\";\r\nexport class Battlefield {\r\n  /*  \r\n      класс Battlefield для создания поля боя\r\n      tanks - массив item-ов для отрисовки на карте включает в себя танк, координаты и id\r\n      mountains - массив гор для отрисовки на карте\r\n      coordinates - массив c координатной сеткой (массив массивов)\r\n      в конструктор передаем размеры поля (по-умолчанию 8х8)\r\n      вызываем метод создания поля createArea, куда передаем высоту и ширину поля\r\n      вызываем метод создания и расстановки Гор addMountains, куда передаем высоту и ширину поля\r\n  */\r\n  tanks = [];\r\n  bullets = [];\r\n  mountains = [];\r\n  coordinates = [];\r\n  timers = [];\r\n  bulletCounter = 0;\r\n  constructor(width = 8, height = 8) {\r\n    this.createArea(width, height);\r\n    this.addMountains(width, height);\r\n  }\r\n  createArea(width, height) {\r\n    /*\r\n      метод создания поля боя, куда передаем размеры поля\r\n      записываем их в виде массива массивов\r\n      запукаем цикл, где\r\n      пееменная row - новый строчный массив, который заполняется пустыми элементами из INDICATORS\r\n      массив - строка добавляется в общий массив\r\n     */\r\n    this.coordinates = [];\r\n    for (let i = 0; i < height; i++) {\r\n      const row = new Array(width).fill(INDICATORS.empty);\r\n      this.coordinates.push(row);\r\n    }\r\n  }\r\n  addMountains(width, height) {\r\n    /* \r\n    метод создания гор в случайном количестве, но не больше суммы длинны и ширины поля * 2\r\n    принимает длинну и ширину поля\r\n    в цикле создается item горы, которой добавляются координаты и hp\r\n    по координатам каждого item-a на поле создается элемент из INDICATORS\r\n    item добавляется в массив mountains\r\n    */\r\n    const mountCount = Math.round((Math.random() * width) + (Math.random() * height)) * 2;\r\n    for (let i = 0; i < mountCount; i++) {\r\n      const x = Math.floor(Math.random() * width)\r\n      const y = Math.floor(Math.random() * height)\r\n      const item = {\r\n        coordinates: { x, y },\r\n        hp: 3,\r\n      }\r\n      this.coordinates[y][x] = INDICATORS.mount;\r\n      this.mountains.push(item);\r\n    }\r\n  }\r\n  addPlayer(tank, coordinates) {\r\n    /* \r\n      метод создания игрока \r\n      принимает танк и координаты для его расстановки\r\n      создаем item - объект, внутри которого танк, координаты и id (номер в массиве tanks)\r\n      первая проверка: если танков в массиве больше, чем клеток - ошибка\r\n      вторая проверка: если на передаваемых координатах есть танк - ошибка\r\n      добавляем созданный item в массив tanks\r\n      вызываем метод обновления поля координат\r\n      возващаем item\r\n    */\r\n    const item = {\r\n      tank: tank,\r\n      coordinates: coordinates,\r\n      id: this.tanks.length,\r\n    }\r\n    if (this.tanks.length >= this.coordinates[0].length * this.coordinates.length) return 'error';\r\n\r\n    if (this.isTankOnCoord(item.coordinates.x, item.coordinates.y)) return 'error';\r\n\r\n    this.tanks.push(item);\r\n    this.updateBattlefieldCoordinates(item.coordinates, item.coordinates, INDICATORS.tank);\r\n    return item;\r\n  }\r\n  getTankByCoords(x, y) {\r\n    return this.tanks.find((tank) => {\r\n      if (tank.coordinates.x === x && tank.coordinates.y === y) return true;\r\n      return false;\r\n    });\r\n  }\r\n  isTankOnCoord(x, y) {\r\n    /* \r\n      метод проверки наличия танка на передаваемых координатах\r\n      переменная ready - boolean.\r\n      цикл перебора танков в массиве tanks\r\n      условие: если координаты танка совпадают с переданными, вернуть true\r\n\r\n    */\r\n    return this.tanks.some((tank) => {\r\n      if (tank.coordinates.x === x && tank.coordinates.y === y) return true;\r\n      return false;\r\n    });\r\n  }\r\n  isMountOnCoords(x, y) {\r\n    /* \r\n      цикл перебора гор в массиве mountains\r\n      условие: если координаты горы совпадают с переданными, отнимаем у горы HP \r\n      если у горы HP <= 0, вызываем метод разушения горы\r\n      переменная ready = false\r\n      если HP больше, ready = true\r\n    */\r\n    let ready = false;\r\n    for (let mount of this.mountains) {\r\n      if (mount.coordinates.x === x && mount.coordinates.y === y) {\r\n        mount.hp--;\r\n        if (mount.hp <= 0) {\r\n          this.destroyMount(mount);\r\n          ready = false;\r\n        }\r\n        else {\r\n          ready = true;\r\n        }\r\n      }\r\n    }\r\n    return ready;\r\n  }\r\n  setTankPosition(id, coordinates) {\r\n    /* \r\n      метод установки танка на позицию\r\n      принимает id из массива танков и координаты для перемещенеия\r\n      если танк неопределен - ошибка\r\n      если на передаваемых координатах есть другой танк - ошибка\r\n      если координаты невалидные - ошибка\r\n      заменяем меняем значки клетки и танка местами\r\n      иначе обновляем координаты танка \r\n    */\r\n    let tank = this.tanks[id];\r\n    if (tank === undefined) return 'error';\r\n    if (this.isTankOnCoord(coordinates.x, coordinates.y)) return 'error';\r\n    if (this.isMountOnCoords(coordinates.x, coordinates.y)) return 'error';\r\n    if (this.isPointOnArea(coordinates.x, coordinates.y) !== true) return 'error';\r\n    this.updateBattlefieldCoordinates(tank.coordinates, coordinates, INDICATORS.tank);\r\n    this.tanks[id].coordinates = coordinates;\r\n    return tank;\r\n  }\r\n  isPointOnArea(x, y) {\r\n    /* \r\n      проверка на выход за пределы поля\r\n      возвращает boolean\r\n    */\r\n    if (x < 0 || y < 0) {\r\n      return false;\r\n    }\r\n    if (x > this.coordinates[0].length - 1) {\r\n      return false;\r\n    }\r\n    if (y > this.coordinates.length - 1) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  updateBattlefieldCoordinates(oldCoordinates, newCoordinates, indicator) {\r\n    /* \r\n      замена значка клетки на значок сущности\r\n      меняем по координатам сущность на пустую клетку\r\n      меняем пустую клетку на сущность\r\n    */\r\n    this.coordinates[oldCoordinates.y][oldCoordinates.x] = INDICATORS.empty;\r\n    this.coordinates[newCoordinates.y][newCoordinates.x] = indicator;\r\n  }\r\n  destroyMount(item) {\r\n    /* \r\n      меняем значок горы на пустую клетку\r\n    */\r\n    this.coordinates[item.coordinates.y][item.coordinates.x] = INDICATORS.empty;\r\n    this.mountains = this.mountains.filter((item) => {\r\n      // if (item.hp < 1) return false;\r\n      //   return true;\r\n      return item.hp > 1;\r\n    })\r\n  }\r\n  addBullet(coordinates) {\r\n    /*\r\n      метод добавления пули\r\n      создаем объект пули,\r\n      с координатами, id и наносимым уроном \r\n      координаты пули - координата танка, смещенная на одну клетку, в сторону направления танка, для этого вызываем метод changeBulletCoordinates\r\n      создаем timer, который вызывает setInterval,\r\n      где если перед пулей нет препятствия (isBulletAvailable == true),\r\n      вызываем таймер снова\r\n     */\r\n    const newCoordinates = this.changeBulletCoordinates(coordinates)\r\n    const bullet = {\r\n      coordinates: newCoordinates,\r\n      id: this.bulletCounter,\r\n      damage: 150,\r\n    }\r\n    const timer = () => setTimeout(() => {\r\n      const isBulletAvailable = this.isBulletAvailableToMove(bullet)\r\n      if (isBulletAvailable) {\r\n        timer();\r\n        if (typeof this.bulletUpdateCallback === 'function') this.bulletUpdateCallback(bullet);\r\n      }\r\n    }, 150);\r\n    this.bullets.push(bullet);\r\n    this.bulletCounter++;\r\n    timer();\r\n    this.updateBattlefieldCoordinates(newCoordinates, newCoordinates, INDICATORS.bullet);\r\n    if (typeof this.bulletUpdateCallback === 'function') this.bulletUpdateCallback(bullet);\r\n  }\r\n  changeBulletCoordinates(coordinates) {\r\n    /* \r\n      выбор началльных координат пули\r\n      если напрвление танка ****, координаты в сторону направления на 1 клетку\r\n    */\r\n    switch (coordinates.direction) {\r\n      case 'top': {\r\n        return { y: coordinates.y, x: coordinates.x - 1, direction: coordinates.direction }\r\n      }\r\n      case \"down\": {\r\n        return { y: coordinates.y, x: coordinates.x + 1, direction: coordinates.direction }\r\n      }\r\n      case \"left\": {\r\n        return { x: coordinates.x, y: coordinates.y - 1, direction: coordinates.direction }\r\n      }\r\n      case \"right\": {\r\n        return { x: coordinates.x, y: coordinates.y + 1, direction: coordinates.direction }\r\n      }\r\n    }\r\n  }\r\n  isBulletAvailableToMove(bullet) {\r\n    /* \r\n      создаем старые координаты\r\n      если перед пулей нет сущости или края карты, \r\n      координаты пули = изменить на 1 через changeBulletCoordinates\r\n      и заменить иконки\r\n      вернуть true\r\n      иначе, если есть препятствие, поменять иконку пули на куст и вернуть false\r\n    */\r\n    const oldCoordinates = {\r\n      x: bullet.coordinates.x,\r\n      y: bullet.coordinates.y,\r\n    }\r\n    if (this.collisionBullet(bullet.id)) {\r\n      bullet.coordinates = this.changeBulletCoordinates(bullet.coordinates);\r\n      this.updateBattlefieldCoordinates(oldCoordinates, bullet.coordinates, INDICATORS.bullet);\r\n      return true;\r\n    }\r\n    else {\r\n      this.updateBattlefieldCoordinates(oldCoordinates, bullet.coordinates, INDICATORS.kust);\r\n      return false;\r\n    }\r\n\r\n  }\r\n  collisionBullet(id) {\r\n    const bullet = this.bullets.find((bullet) => {\r\n      if (bullet.id === id) return true;\r\n      return false;\r\n    });\r\n    if (!bullet) return;\r\n    let x = bullet.coordinates.x;\r\n    let y = bullet.coordinates.y;\r\n    // const bulletDiv = document.getAttribute('B');\r\n    if (['top', 'down'].includes(bullet.coordinates.direction)) {\r\n      x = x + (bullet.coordinates.direction == 'top' ? -1 : 1);\r\n\r\n    }\r\n    if (['left', 'right'].includes(bullet.coordinates.direction)) {\r\n      y = y + (bullet.coordinates.direction == 'left' ? -1 : 1);\r\n      // bullet.classList.add('bullet.coordinates.direction');\r\n    }\r\n    if (!this.isPointOnArea(x, y)) {\r\n      this.removeBullet(id);\r\n      return false;\r\n    }\r\n    if (this.isMountOnCoords(x, y)) {\r\n      this.removeBullet(id);\r\n      return false;\r\n    }\r\n    const tank = this.getTankByCoords(x, y)\r\n    if (tank !== undefined) {\r\n      const health = tank.tank.health;\r\n      tank.tank.doDamage(bullet);\r\n      if (health <= 0) {\r\n        this.removeTank(tank.id);\r\n        this.updateBattlefieldCoordinates(tank.coordinates, tank.coordinates, INDICATORS.kust)\r\n        this.gameOverCallback(this.tanks);\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  removeBullet(id) {\r\n    this.bullets = this.bullets.filter((bullet) => {\r\n      if (id === bullet.id) return false;\r\n      return true;\r\n    })\r\n  }\r\n  addBulletUpdateCallback(callback) {\r\n    /* \r\n    получает функцию-иструкцию и записывает в this\r\n    */\r\n    this.bulletUpdateCallback = callback;\r\n  }\r\n  removeTank(id) {\r\n    this.tanks = this.tanks.filter((tank) => {\r\n      if (id === tank.id) return false;\r\n      return true;\r\n    })\r\n  }\r\n  addGameCallback(callback) {\r\n    this.gameOverCallback = callback;\r\n  }\r\n}","export class BattlefieldViews {\r\n    init(coordinates) {\r\n        /* \r\n            графическое отображение в браузере\r\n            записываем передаваемые координаты в this\r\n            создаем див-контейнер\r\n            добавляем класс container контейнеру\r\n            запускаем цикл от 0 до количества вложенных массивов в родительском массиве координат ;y++\r\n            присваиваем переменной текущий массив (строка - у)\r\n            создаем новый див (строку y)\r\n            запускаем цикл пока у = длинне строки координат (массива y)\r\n            создаем ячейку с помощью метода createSection\r\n            добавлям ячейку в строку\r\n            добавляем строку в контейнер\r\n            добавляем контейнер на страницу\r\n        */\r\n        if (document.querySelector('.container') !== null) return;\r\n        this.coordinates = coordinates;\r\n        let rootDiv = document.createElement('div');\r\n        rootDiv.classList.add('container');\r\n        for (let y = 0; y < coordinates.length; y++) {\r\n            let row = coordinates[y];\r\n            let rowDiv = document.createElement('div');\r\n            rowDiv.classList.add('row')\r\n            for (let x = 0; x < row.length; x++) {\r\n                let section = this.createSection(row[y], y, x);\r\n                rowDiv.appendChild(section);\r\n            }\r\n            rootDiv.appendChild(rowDiv);\r\n        }\r\n        document.body.appendChild(rootDiv);\r\n    }\r\n    update(coordinates) {\r\n        /* \r\n            метод обновления координат\r\n            записываем передаваемые координаты в this\r\n            цикл перебора вложенных массивов в родительском массиве\r\n            присваиваем переменной текущий массив (строка - у)\r\n            перебираем каждый вложенный массив координат\r\n            выбираем элемент документа по дата-атрибутам и присваеваем ему текст-контент соответствующего элемента\r\n        */\r\n        this.coordinates = coordinates;\r\n        for (let y = 0; y < coordinates.length; y++) {\r\n            let row = coordinates[y];\r\n            for (let x = 0; x < row.length; x++) {\r\n                document.querySelector(`[data-y=\"${x}\"][data-x=\"${y}\"]`).dataset.type = row[x];\r\n            }\r\n        }\r\n    }\r\n    createSection(content, x, y) {\r\n        /* \r\n            метод создания элементов\r\n            создаем div и записываем его в переменную,\r\n            добавляем ему css класс cell,\r\n            добавляем data-атрибут с символом в зависимости от символа в сетке,\r\n            добавляем data-атрибуты с коорднатами,\r\n            возвращаем готовый элемент\r\n        */\r\n        let section = document.createElement('div');\r\n        section.classList.add('cell')\r\n        section.dataset.type = content;\r\n        section.dataset.x = x;\r\n        section.dataset.y = y;\r\n        return section;\r\n    }\r\n    updateTankPosition(coordinates, playerId, direction) {\r\n        /* \r\n            метод поворота танка\r\n            ищем элемент по id\r\n            если находим, удаляем у него data-атрибут id\r\n            удаляем css классы с направлением\r\n            по переданным координатам выбираем танк\r\n            присваеваем ему переданный id\r\n            добавляем css свойство с направлением\r\n        */\r\n        const $id = document.getElementById(playerId)\r\n        if ($id) {\r\n            $id.removeAttribute('id');\r\n            $id.classList.remove('left', 'right', 'top', 'down');\r\n        }\r\n        const $tank = document.querySelector(`[data-y=\"${coordinates.x}\"][data-x=\"${coordinates.y}\"]`);\r\n        $tank.id = playerId;\r\n        $tank.classList.add(direction);\r\n    }\r\n    updateBulletDirection(bullet) {\r\n        /* \r\n            метод поворота пули\r\n            ищем пулю по координатам\r\n            добавляем пуле css свойство в зависимости от направления\r\n        */\r\n        const $bullet = document.querySelector(`[data-y=\"${bullet.coordinates.x}\"][data-x=\"${bullet.coordinates.y}\"]`);\r\n        // $bullet.dataset.bulletId = bullet.id;\r\n        $bullet.classList.add(bullet.coordinates.direction);\r\n    }\r\n}","export function throttle(callback, time) {\r\n    /*  функция throttle, в которую передаем необходимую функцию и время, через которое можно выполнить ее снова \r\n        переменная isOpen - boolean (можно ли выполнять функцию) - по-умолчанию true\r\n        возвращаем функцию,\r\n        в которой если isOpen = true, запускаем функцию setTimeout,\r\n        запрещаем очередное выполнение функции, пока не кончится таймер\r\n        по окончании времени time разрешаем выполнение функции\r\n        выпоняем функцию\r\n    */\r\n    let isOpen = true;\r\n    return function () {\r\n        if (isOpen) {\r\n            setTimeout(function () {\r\n                isOpen = true;\r\n            }, time)\r\n            isOpen = false;\r\n            // callback();\r\n            callback.apply(this, arguments)\r\n        }\r\n    }\r\n}\r\n\r\nexport function debounce(callback, time) {\r\n    /*  функция debounce, в которую передаем необходимую функцию и время, через которое она выполнится\r\n        timer - время выполнения\r\n        возвращаем функцию, которая сбраывает таймер при вызове\r\n        очищаем таймер\r\n        вызываем таймаут, через который можно выполнить передаваемую функцию\r\n    */\r\n    let timer = null;\r\n    return function () {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n            callback.apply(this, arguments)\r\n        }, time);\r\n\r\n    }\r\n}\r\n\r\n\r\n// const logZaloopa = debounce(() => {\r\n//     console.log ('123');\r\n// }, 300)\r\n\r\n// document.addEventListener('click', logZaloopa)\r\n\r\n\r\n\r\n// class Malenkii {\r\n//     constructor (){\r\n//         this.asdfds = debounce(this.asdfds, 500)\r\n//     }\r\n//     asdfds() {\r\n//         console.log (this)\r\n//     }\r\n// }\r\n// const malenkii = new Malenkii;\r\n// malenkii.asdfds();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function addEventListener(callback, args) {\r\n//     callback(args)\r\n// };\r\n// addEventListener(function (e){\r\n//     console.log(e);\r\n// }, 'rarar')","import { BattlefieldViews } from \"../views/BattlefieldView\";\r\nimport { throttle } from \"../utils/helpers\";\r\n\r\n\r\nexport class BattlefieldController {\r\n    constructor(battlefield, tank, config) {\r\n        /* \r\n            класс для управления танком\r\n            принимает поле боя, танк и его параметры\r\n            при создании контроллера записываем в него передаваемое поле боя, танк и параметры\r\n            записываем танк в класс контроллер\r\n            записываем в переменную oneKeyDown функцию throttle и передаем в нее исполняемую функцию и время выполнения\r\n            вызываем метод построения макета (при создании инстанса)\r\n            создаем и записываем игрока в переменную player с помощью метода класса battlefield.addPlayer с передаными параметрами\r\n            вызываем метод визуального обновления игроков и их отрисовку на поле\r\n            обновляем направление танка\r\n            вызываем слушатель событий\r\n        */\r\n        this.battlefield = battlefield;\r\n        this.tank = tank;\r\n        this.config = config;\r\n        this.onKeyDown = throttle(this.onKeyDown, 150);\r\n        this.onFireButtonPress = throttle(this.onFireButtonPress, 2000);\r\n        this.initBattlefieldView();\r\n        this.player = battlefield.addPlayer(tank, config);\r\n        // console.log(this.player)\r\n        this.updatePlayer();\r\n        this.updateTankPosition(config.direction)\r\n        this.eventListener();\r\n    }\r\n    initBattlefieldView() {\r\n        /* \r\n            создаем инстанс класса отрисовки\r\n            после создания макета визуализируем поле боя по преданным координатам (размеру)\r\n        */\r\n        this.battlefieldView = new BattlefieldViews;\r\n        this.battlefieldView.init(this.battlefield.coordinates)\r\n    }\r\n    updatePlayer() {\r\n        /* \r\n            метод для переотрисовки поля\r\n        */\r\n        this.battlefieldView.update(this.battlefield.coordinates);\r\n    }\r\n    onKeyDown(e) {\r\n        /* \r\n            метод слушателей события\r\n            если нажатая клавиша === ***,\r\n            вызываем метод движения\r\n            перерисовываем поле\r\n        */\r\n        if (e.code === this.config.control.UP) {\r\n            this.moveTop();\r\n            this.updatePlayer();\r\n        }\r\n        if (e.code === this.config.control.DOWN) {\r\n            this.moveDown();\r\n            this.updatePlayer();\r\n        }\r\n        if (e.code === this.config.control.LEFT) {\r\n            this.moveLeft();\r\n            this.updatePlayer();\r\n        }\r\n        if (e.code === this.config.control.RIGHT) {\r\n            this.moveRight();\r\n            this.updatePlayer();\r\n        }\r\n    }\r\n    eventListener() {\r\n        /* \r\n            метод вызова слушателя событий\r\n            вызывает слушатель событий\r\n            вызывает метод из класса Battlefield, куда передаем функцию callback\r\n        */\r\n        document.addEventListener('keydown', (e) => this.onFireButtonPress(e));\r\n        document.addEventListener('keydown', (e) => this.onKeyDown(e));\r\n        this.battlefield.addBulletUpdateCallback((bullet) => {\r\n            this.battlefieldView.updateBulletDirection(bullet);\r\n        })\r\n        this.battlefield.addGameCallback((tank) => {\r\n            console.log(tank)\r\n            alert(`Игрок ${tank[0].tank.name} победил`)\r\n        })\r\n    }\r\n    updateConfig(result) {\r\n        /*\r\n            обновление параметров танка \r\n            принимает координаты или ошибку\r\n            если пришедший результат не равен ошибке\r\n            заменить координаты танка на пришедшие координаты из result \r\n        */\r\n        if (result !== 'error') {\r\n            this.config.x = result.coordinates.x;\r\n            this.config.y = result.coordinates.y;\r\n        }\r\n    }\r\n    moveTop() {\r\n        /*         \r\n            метод движения танка\r\n            записываем в объект текущие параметры\r\n            вызываем метод для установки танка на позицию, отличную на 1 яечйку по каждому клику записываем в result\r\n            передаем result для обновления параметров \r\n        */\r\n        const { x, y } = this.config;\r\n        const result = this.battlefield.setTankPosition(this.player.id, { y, x: x - 1 });\r\n        this.updateConfig(result);\r\n        this.updateTankPosition('top');\r\n    }\r\n    moveDown() {\r\n        const { y, x } = this.config;\r\n        const result = this.battlefield.setTankPosition(this.player.id, { y, x: x + 1 });\r\n        this.updateConfig(result);\r\n        this.updateTankPosition('down');\r\n    }\r\n    moveLeft() {\r\n        const { y, x } = this.config;\r\n        const result = this.battlefield.setTankPosition(this.player.id, { y: y - 1, x });\r\n        this.updateConfig(result);\r\n        this.updateTankPosition('left');\r\n    }\r\n    moveRight() {\r\n        const { y, x } = this.config;\r\n        const result = this.battlefield.setTankPosition(this.player.id, { y: y + 1, x });\r\n        this.updateConfig(result);\r\n        this.updateTankPosition('right');\r\n    }\r\n    updateTankPosition(direction) {\r\n        /* \r\n            метод обновления позиции танка\r\n            записываем переданное направление танка в его параметры\r\n            вызываем метод визуального обновления танка\r\n        */\r\n        this.player.coordinates.direction = direction;\r\n        this.battlefieldView.updateTankPosition(this.player.coordinates, this.player.id, direction)\r\n\r\n    }\r\n    onFireButtonPress(e) {\r\n        /*\r\n            если нажата кнопка FIRE, вызвать метод добавления пули addBullet у класса Battlefield\r\n        */\r\n        if (e.code === this.config.control.FIRE) {\r\n            this.battlefield.addBullet(this.player.coordinates)\r\n        }\r\n    }\r\n}","export class Server {\n  // Returns a Promise with width and height values number[];\n  // Or error;\n  requestFieldSize () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const x = 8 + Math.ceil((Math.random() * 16));\n        const y = x;\n        if (Math.random() >= 0)\n          resolve({x: x, y: y});\n        else\n          reject('SLOMANO')\n      }, Math.random() * 1500);\n    })\n  }\n\n  // Returns a Promise with players coordinates { x: number, y: number };\n  // Or error;\n  async requestSecondPlayerPosition () {\n    await this.#yobaPromise();\n    return { x: 0, y: 3 };\n  }\n\n  // Returns a Promise with boolean\n  async requestAllowingToPlay () {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n         resolve(Math.random() > 0.5);\n      }, Math.random() * 3000);\n    })\n  }\n\n  #yobaPromise () {\n    return new Promise((resolve => {\n      setTimeout(() => {\n        resolve();\n      }, Math.random() * 3000);\n    }))\n  }\n}\n","import { Server } from \"./Server\";\r\n\r\nexport class Connection {\r\n    constructor () {\r\n        // this.fn = fn;\r\n        this.serverConnect = new Server;\r\n    }\r\n    whatIsThisSize () {\r\n        return this.serverConnect.requestFieldSize();\r\n    }\r\n    isReadyPlayer () {\r\n        \r\n    }\r\n    \r\n}\r\n","import { Tank } from \"./Tank\";\nimport { Battlefield } from \"./Battlefield\";\nimport { BattlefieldController } from \"./Controllers/BattlefieldController\";\nimport { Connection } from \"./server/Connection\";\nimport \"./utils/helpers.js\"\nimport \"./styles/styles.scss\"\nimport { BattlefieldViews } from \"./views/BattlefieldView\";\nconst tank1 = new Tank('tank_1');\nconst tank2 = new Tank('tank_2');\n\nconst connection = new Connection();\nconst areaSize = connection.whatIsThisSize();\n\nareaSize.then(function(size){\n    let _size = size;\n    let positionY = Math.floor(_size.y/2);\n    let positionX_1 = 0;\n    let positionX_2 = _size.x-1;\n    console.log('Area Ready');\n    const battlefield = new Battlefield(_size.y, _size.x);\n    new BattlefieldController(battlefield, tank1, { y: positionY, x: positionX_1, control: controls1, direction: 'down'})\n    new BattlefieldController(battlefield, tank2, { y: positionY, x: positionX_2, control: controls2, direction: 'top'})\n    const battlefieldViews = new BattlefieldViews\n    setInterval(() => {\n        battlefieldViews.update(battlefield.coordinates)\n    }, 150)\n    \n})\n.catch(function(e){\n    console.error('Area Error');\n    console.log(e);\n})\n\n\nconst controls1 = {\n    UP: 'KeyW',\n    DOWN: 'KeyS',\n    LEFT: 'KeyA',\n    RIGHT: 'KeyD',\n    FIRE: 'Space',\n};\nconst controls2 = {\n    UP: 'ArrowUp',\n    DOWN: 'ArrowDown',\n    LEFT: 'ArrowLeft',\n    RIGHT: 'ArrowRight',\n    FIRE: 'Enter',\n};\n\n\n\n// fetch('/server/Server.js')\n//     .then((data) => {\n//         console.log(data);\n//     })\n\n\n\n\n\n// console.log(tank1.healh)\n// console.log(tank2.fire)\n\n// function battle (tank1 , tank2) {\n//     let count_1 = tank1.bullets;\n//     let count_2 = tank2.bullets;\n//     let tank1HP = tank1.healh;\n//     let tank2HP = tank2.healh;\n//     for (; count_1 > 0|| count_2 > 0; count_1--, count_2--)  {\n//         console.log(`Танк 1 делает выстрел! Осталось снарядов: ${count_1}`)\n//         tank2HP -= tank1.fire;\n//         if (tank2HP <= 0){\n//             console.log('У Танка 2 не оталось HP! Победил Танк 1!');\n//             break;\n//         } \n//         console.log(`У танка 2 остается ${tank2HP}HP`)\n//         console.log(`Танк 2 делает выстрел! Осталось снарядов: ${count_2}`)\n//         tank1HP -= tank2.fire;\n//         if (tank1HP <= 0){\n//             console.log('У Танка 1 не оталось HP! Победил Танк 2!');\n//             break;\n//         }\n//         console.log(`У танка 1 остается ${tank1HP}HP`);\n//     }\n\n// }\n\n// battle(tank1, tank2);\n\n/* import { BattlefieldViews } from \"../views/BattlefieldView\";\n\nexport class BattlefieldController {\n\n    constructor(battlefield, tank, config) {\n        this.battlefield = battlefield;\n        this.tank = tank;\n        this.config = config;\n        this.initBattlefieldView();\n        this.player = battlefield.addPlayer(tank, config);\n        this.updatePlayer();\n        this.eventListener();\n    }\n    initBattlefieldView() {\n        this.battlefieldView = new BattlefieldViews;\n        this.battlefieldView.init(this.battlefield.coordinates)\n    }\n    updatePlayer() {\n        this.battlefieldView.update(this.battlefield.coordinates);\n    }\n    eventListener() {\n        document.addEventListener('keydown', (e) => {\n            if (e.code === 'ArrowUp') {\n                this.moveTop();\n                this.updatePlayer();\n            }\n            if (e.code === 'ArrowDown') {\n                this.moveDown();\n                this.updatePlayer();\n            }\n            if (e.code === 'ArrowLeft') {\n                this.moveLeft();\n                this.updatePlayer();\n            }\n            if (e.code === 'ArrowRight') {\n                this.moveRight();\n                this.updatePlayer();\n            }\n        })\n    }\n    updateConfig(result) {\n        if (result !== 'error') {\n            this.config.x = result.coordinates.x;\n            this.config.y = result.coordinates.y;\n        }\n    }\n    moveTop() {\n        const { x, y } = this.config;\n        const result = this.battlefield.setTankPosition(this.player.id, { x, y: y - 1 });\n        this.updateConfig(result);\n    }\n    moveDown() {\n        const { x, y } = this.config;\n        const result = this.battlefield.setTankPosition(this.player.id, { x, y: y + 1 });\n        this.updateConfig(result);\n    }\n    moveLeft() {\n        const { x, y } = this.config;\n        const result = this.battlefield.setTankPosition(this.player.id, { x: x - 1, y });\n        this.updateConfig(result);\n    }\n    moveRight() {\n        const { x, y } = this.config;\n        const result = this.battlefield.setTankPosition(this.player.id, { x: x + 1, y });\n        this.updateConfig(result);\n    }\n}\n */"],"sourceRoot":""}